#!/bin/bash

# Stop on errors, print commands
set -Eeuo pipefail
# set -x


# Sanity check command line options
usage() {
  echo "Usage: $0 (start|stop|restart|status)"
}


if [ $# -ne 1 ]; then
  usage
  exit 1
fi


# Parse argument.  $1 is the first argument
case $1 in
  "start")
    if ! test -f "var/search.sqlite3"; then
        echo "Error: can't find search database var/search.sqlite3"
        echo "Try: ./bin/searchdb create"
        exit 1
    fi
    if ! ./bin/index status; then
        echo "Error: index server is not running"
        echo "Try ./bin/index start"
        exit 2
    fi
    if pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" > /dev/null
    then
        echo "Error: search server is already running"
        exit 3
    fi
    echo "starting search server ..."
    mkdir -p var/log
    rm -f var/log/search.log
    flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
    ;;


  "stop")
    echo "stopping search server ..."
    pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true
    ;;


  "restart")
    echo "stopping search server ..."
    pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true
    echo "starting search server ..."
    mkdir -p var/log
    rm -f var/log/search.log
    flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
    ;;


  "status")
    if pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" > /dev/null
    then
        echo "search server running"
        exit
    else
        echo "search server stopped"
        exit 1
    fi
    ;;
  *)
    usage
    exit 1
    ;;
esac
